// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Main.pb.h"
// @@protoc_insertion_point(imports)

@implementation MainRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [MainRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL CmdIDIsValidValue(CmdID value) {
  switch (value) {
    case CmdIDCmdIdInvalid:
    case CmdIDCmdIdUnknown:
    case CmdIDCmdIdHello:
    case CmdIDCmdIdAuth:
    case CmdIDCmdIdSendMessage:
    case CmdIDCmdIdConversationList:
    case CmdIDCmdIdJointopic:
    case CmdIDCmdIdLefttopic:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromCmdID(CmdID value) {
  switch (value) {
    case CmdIDCmdIdInvalid:
      return @"CmdIDCmdIdInvalid";
    case CmdIDCmdIdUnknown:
      return @"CmdIDCmdIdUnknown";
    case CmdIDCmdIdHello:
      return @"CmdIDCmdIdHello";
    case CmdIDCmdIdAuth:
      return @"CmdIDCmdIdAuth";
    case CmdIDCmdIdSendMessage:
      return @"CmdIDCmdIdSendMessage";
    case CmdIDCmdIdConversationList:
      return @"CmdIDCmdIdConversationList";
    case CmdIDCmdIdJointopic:
      return @"CmdIDCmdIdJointopic";
    case CmdIDCmdIdLefttopic:
      return @"CmdIDCmdIdLefttopic";
    default:
      return nil;
  }
}

@interface HelloRequest ()
@property (strong) NSString* user;
@property (strong) NSString* text;
@end

@implementation HelloRequest

- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) _value_ {
  hasUser_ = !!_value_;
}
@synthesize user;
- (BOOL) hasText {
  return !!hasText_;
}
- (void) setHasText:(BOOL) _value_ {
  hasText_ = !!_value_;
}
@synthesize text;
- (instancetype) init {
  if ((self = [super init])) {
    self.user = @"";
    self.text = @"";
  }
  return self;
}
static HelloRequest* defaultHelloRequestInstance = nil;
+ (void) initialize {
  if (self == [HelloRequest class]) {
    defaultHelloRequestInstance = [[HelloRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultHelloRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultHelloRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUser) {
    return NO;
  }
  if (!self.hasText) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUser) {
    [output writeString:1 value:self.user];
  }
  if (self.hasText) {
    [output writeString:2 value:self.text];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUser) {
    size_ += computeStringSize(1, self.user);
  }
  if (self.hasText) {
    size_ += computeStringSize(2, self.text);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (HelloRequest*) parseFromData:(NSData*) data {
  return (HelloRequest*)[[[HelloRequest builder] mergeFromData:data] build];
}
+ (HelloRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HelloRequest*)[[[HelloRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (HelloRequest*) parseFromInputStream:(NSInputStream*) input {
  return (HelloRequest*)[[[HelloRequest builder] mergeFromInputStream:input] build];
}
+ (HelloRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HelloRequest*)[[[HelloRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HelloRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (HelloRequest*)[[[HelloRequest builder] mergeFromCodedInputStream:input] build];
}
+ (HelloRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HelloRequest*)[[[HelloRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HelloRequestBuilder*) builder {
  return [[HelloRequestBuilder alloc] init];
}
+ (HelloRequestBuilder*) builderWithPrototype:(HelloRequest*) prototype {
  return [[HelloRequest builder] mergeFrom:prototype];
}
- (HelloRequestBuilder*) builder {
  return [HelloRequest builder];
}
- (HelloRequestBuilder*) toBuilder {
  return [HelloRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUser) {
    [output appendFormat:@"%@%@: %@\n", indent, @"user", self.user];
  }
  if (self.hasText) {
    [output appendFormat:@"%@%@: %@\n", indent, @"text", self.text];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUser) {
    [dictionary setObject: self.user forKey: @"user"];
  }
  if (self.hasText) {
    [dictionary setObject: self.text forKey: @"text"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[HelloRequest class]]) {
    return NO;
  }
  HelloRequest *otherMessage = other;
  return
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      self.hasText == otherMessage.hasText &&
      (!self.hasText || [self.text isEqual:otherMessage.text]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  if (self.hasText) {
    hashCode = hashCode * 31 + [self.text hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface HelloRequestBuilder()
@property (strong) HelloRequest* resultHelloRequest;
@end

@implementation HelloRequestBuilder
@synthesize resultHelloRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHelloRequest = [[HelloRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHelloRequest;
}
- (HelloRequestBuilder*) clear {
  self.resultHelloRequest = [[HelloRequest alloc] init];
  return self;
}
- (HelloRequestBuilder*) clone {
  return [HelloRequest builderWithPrototype:resultHelloRequest];
}
- (HelloRequest*) defaultInstance {
  return [HelloRequest defaultInstance];
}
- (HelloRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (HelloRequest*) buildPartial {
  HelloRequest* returnMe = resultHelloRequest;
  self.resultHelloRequest = nil;
  return returnMe;
}
- (HelloRequestBuilder*) mergeFrom:(HelloRequest*) other {
  if (other == [HelloRequest defaultInstance]) {
    return self;
  }
  if (other.hasUser) {
    [self setUser:other.user];
  }
  if (other.hasText) {
    [self setText:other.text];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (HelloRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (HelloRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUser:[input readString]];
        break;
      }
      case 18: {
        [self setText:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUser {
  return resultHelloRequest.hasUser;
}
- (NSString*) user {
  return resultHelloRequest.user;
}
- (HelloRequestBuilder*) setUser:(NSString*) value {
  resultHelloRequest.hasUser = YES;
  resultHelloRequest.user = value;
  return self;
}
- (HelloRequestBuilder*) clearUser {
  resultHelloRequest.hasUser = NO;
  resultHelloRequest.user = @"";
  return self;
}
- (BOOL) hasText {
  return resultHelloRequest.hasText;
}
- (NSString*) text {
  return resultHelloRequest.text;
}
- (HelloRequestBuilder*) setText:(NSString*) value {
  resultHelloRequest.hasText = YES;
  resultHelloRequest.text = value;
  return self;
}
- (HelloRequestBuilder*) clearText {
  resultHelloRequest.hasText = NO;
  resultHelloRequest.text = @"";
  return self;
}
@end

@interface HelloResponse ()
@property SInt32 retcode;
@property (strong) NSString* errmsg;
@end

@implementation HelloResponse

- (BOOL) hasRetcode {
  return !!hasRetcode_;
}
- (void) setHasRetcode:(BOOL) _value_ {
  hasRetcode_ = !!_value_;
}
@synthesize retcode;
- (BOOL) hasErrmsg {
  return !!hasErrmsg_;
}
- (void) setHasErrmsg:(BOOL) _value_ {
  hasErrmsg_ = !!_value_;
}
@synthesize errmsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.retcode = 0;
    self.errmsg = @"";
  }
  return self;
}
static HelloResponse* defaultHelloResponseInstance = nil;
+ (void) initialize {
  if (self == [HelloResponse class]) {
    defaultHelloResponseInstance = [[HelloResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultHelloResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultHelloResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRetcode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRetcode) {
    [output writeInt32:1 value:self.retcode];
  }
  if (self.hasErrmsg) {
    [output writeString:2 value:self.errmsg];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRetcode) {
    size_ += computeInt32Size(1, self.retcode);
  }
  if (self.hasErrmsg) {
    size_ += computeStringSize(2, self.errmsg);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (HelloResponse*) parseFromData:(NSData*) data {
  return (HelloResponse*)[[[HelloResponse builder] mergeFromData:data] build];
}
+ (HelloResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HelloResponse*)[[[HelloResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (HelloResponse*) parseFromInputStream:(NSInputStream*) input {
  return (HelloResponse*)[[[HelloResponse builder] mergeFromInputStream:input] build];
}
+ (HelloResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HelloResponse*)[[[HelloResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HelloResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (HelloResponse*)[[[HelloResponse builder] mergeFromCodedInputStream:input] build];
}
+ (HelloResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HelloResponse*)[[[HelloResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HelloResponseBuilder*) builder {
  return [[HelloResponseBuilder alloc] init];
}
+ (HelloResponseBuilder*) builderWithPrototype:(HelloResponse*) prototype {
  return [[HelloResponse builder] mergeFrom:prototype];
}
- (HelloResponseBuilder*) builder {
  return [HelloResponse builder];
}
- (HelloResponseBuilder*) toBuilder {
  return [HelloResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRetcode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"retcode", [NSNumber numberWithInteger:self.retcode]];
  }
  if (self.hasErrmsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errmsg", self.errmsg];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasRetcode) {
    [dictionary setObject: [NSNumber numberWithInteger:self.retcode] forKey: @"retcode"];
  }
  if (self.hasErrmsg) {
    [dictionary setObject: self.errmsg forKey: @"errmsg"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[HelloResponse class]]) {
    return NO;
  }
  HelloResponse *otherMessage = other;
  return
      self.hasRetcode == otherMessage.hasRetcode &&
      (!self.hasRetcode || self.retcode == otherMessage.retcode) &&
      self.hasErrmsg == otherMessage.hasErrmsg &&
      (!self.hasErrmsg || [self.errmsg isEqual:otherMessage.errmsg]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasRetcode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.retcode] hash];
  }
  if (self.hasErrmsg) {
    hashCode = hashCode * 31 + [self.errmsg hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface HelloResponseBuilder()
@property (strong) HelloResponse* resultHelloResponse;
@end

@implementation HelloResponseBuilder
@synthesize resultHelloResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHelloResponse = [[HelloResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHelloResponse;
}
- (HelloResponseBuilder*) clear {
  self.resultHelloResponse = [[HelloResponse alloc] init];
  return self;
}
- (HelloResponseBuilder*) clone {
  return [HelloResponse builderWithPrototype:resultHelloResponse];
}
- (HelloResponse*) defaultInstance {
  return [HelloResponse defaultInstance];
}
- (HelloResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (HelloResponse*) buildPartial {
  HelloResponse* returnMe = resultHelloResponse;
  self.resultHelloResponse = nil;
  return returnMe;
}
- (HelloResponseBuilder*) mergeFrom:(HelloResponse*) other {
  if (other == [HelloResponse defaultInstance]) {
    return self;
  }
  if (other.hasRetcode) {
    [self setRetcode:other.retcode];
  }
  if (other.hasErrmsg) {
    [self setErrmsg:other.errmsg];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (HelloResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (HelloResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRetcode:[input readInt32]];
        break;
      }
      case 18: {
        [self setErrmsg:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRetcode {
  return resultHelloResponse.hasRetcode;
}
- (SInt32) retcode {
  return resultHelloResponse.retcode;
}
- (HelloResponseBuilder*) setRetcode:(SInt32) value {
  resultHelloResponse.hasRetcode = YES;
  resultHelloResponse.retcode = value;
  return self;
}
- (HelloResponseBuilder*) clearRetcode {
  resultHelloResponse.hasRetcode = NO;
  resultHelloResponse.retcode = 0;
  return self;
}
- (BOOL) hasErrmsg {
  return resultHelloResponse.hasErrmsg;
}
- (NSString*) errmsg {
  return resultHelloResponse.errmsg;
}
- (HelloResponseBuilder*) setErrmsg:(NSString*) value {
  resultHelloResponse.hasErrmsg = YES;
  resultHelloResponse.errmsg = value;
  return self;
}
- (HelloResponseBuilder*) clearErrmsg {
  resultHelloResponse.hasErrmsg = NO;
  resultHelloResponse.errmsg = @"";
  return self;
}
@end

@interface Conversation ()
@property (strong) NSString* topic;
@property (strong) NSString* notice;
@property (strong) NSString* name;
@end

@implementation Conversation

- (BOOL) hasTopic {
  return !!hasTopic_;
}
- (void) setHasTopic:(BOOL) _value_ {
  hasTopic_ = !!_value_;
}
@synthesize topic;
- (BOOL) hasNotice {
  return !!hasNotice_;
}
- (void) setHasNotice:(BOOL) _value_ {
  hasNotice_ = !!_value_;
}
@synthesize notice;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (instancetype) init {
  if ((self = [super init])) {
    self.topic = @"";
    self.notice = @"";
    self.name = @"";
  }
  return self;
}
static Conversation* defaultConversationInstance = nil;
+ (void) initialize {
  if (self == [Conversation class]) {
    defaultConversationInstance = [[Conversation alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultConversationInstance;
}
- (instancetype) defaultInstance {
  return defaultConversationInstance;
}
- (BOOL) isInitialized {
  if (!self.hasTopic) {
    return NO;
  }
  if (!self.hasNotice) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTopic) {
    [output writeString:1 value:self.topic];
  }
  if (self.hasNotice) {
    [output writeString:2 value:self.notice];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTopic) {
    size_ += computeStringSize(1, self.topic);
  }
  if (self.hasNotice) {
    size_ += computeStringSize(2, self.notice);
  }
  if (self.hasName) {
    size_ += computeStringSize(3, self.name);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Conversation*) parseFromData:(NSData*) data {
  return (Conversation*)[[[Conversation builder] mergeFromData:data] build];
}
+ (Conversation*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Conversation*)[[[Conversation builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Conversation*) parseFromInputStream:(NSInputStream*) input {
  return (Conversation*)[[[Conversation builder] mergeFromInputStream:input] build];
}
+ (Conversation*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Conversation*)[[[Conversation builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Conversation*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Conversation*)[[[Conversation builder] mergeFromCodedInputStream:input] build];
}
+ (Conversation*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Conversation*)[[[Conversation builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ConversationBuilder*) builder {
  return [[ConversationBuilder alloc] init];
}
+ (ConversationBuilder*) builderWithPrototype:(Conversation*) prototype {
  return [[Conversation builder] mergeFrom:prototype];
}
- (ConversationBuilder*) builder {
  return [Conversation builder];
}
- (ConversationBuilder*) toBuilder {
  return [Conversation builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTopic) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topic", self.topic];
  }
  if (self.hasNotice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"notice", self.notice];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTopic) {
    [dictionary setObject: self.topic forKey: @"topic"];
  }
  if (self.hasNotice) {
    [dictionary setObject: self.notice forKey: @"notice"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Conversation class]]) {
    return NO;
  }
  Conversation *otherMessage = other;
  return
      self.hasTopic == otherMessage.hasTopic &&
      (!self.hasTopic || [self.topic isEqual:otherMessage.topic]) &&
      self.hasNotice == otherMessage.hasNotice &&
      (!self.hasNotice || [self.notice isEqual:otherMessage.notice]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTopic) {
    hashCode = hashCode * 31 + [self.topic hash];
  }
  if (self.hasNotice) {
    hashCode = hashCode * 31 + [self.notice hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ConversationBuilder()
@property (strong) Conversation* resultConversation;
@end

@implementation ConversationBuilder
@synthesize resultConversation;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultConversation = [[Conversation alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultConversation;
}
- (ConversationBuilder*) clear {
  self.resultConversation = [[Conversation alloc] init];
  return self;
}
- (ConversationBuilder*) clone {
  return [Conversation builderWithPrototype:resultConversation];
}
- (Conversation*) defaultInstance {
  return [Conversation defaultInstance];
}
- (Conversation*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Conversation*) buildPartial {
  Conversation* returnMe = resultConversation;
  self.resultConversation = nil;
  return returnMe;
}
- (ConversationBuilder*) mergeFrom:(Conversation*) other {
  if (other == [Conversation defaultInstance]) {
    return self;
  }
  if (other.hasTopic) {
    [self setTopic:other.topic];
  }
  if (other.hasNotice) {
    [self setNotice:other.notice];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ConversationBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ConversationBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setTopic:[input readString]];
        break;
      }
      case 18: {
        [self setNotice:[input readString]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasTopic {
  return resultConversation.hasTopic;
}
- (NSString*) topic {
  return resultConversation.topic;
}
- (ConversationBuilder*) setTopic:(NSString*) value {
  resultConversation.hasTopic = YES;
  resultConversation.topic = value;
  return self;
}
- (ConversationBuilder*) clearTopic {
  resultConversation.hasTopic = NO;
  resultConversation.topic = @"";
  return self;
}
- (BOOL) hasNotice {
  return resultConversation.hasNotice;
}
- (NSString*) notice {
  return resultConversation.notice;
}
- (ConversationBuilder*) setNotice:(NSString*) value {
  resultConversation.hasNotice = YES;
  resultConversation.notice = value;
  return self;
}
- (ConversationBuilder*) clearNotice {
  resultConversation.hasNotice = NO;
  resultConversation.notice = @"";
  return self;
}
- (BOOL) hasName {
  return resultConversation.hasName;
}
- (NSString*) name {
  return resultConversation.name;
}
- (ConversationBuilder*) setName:(NSString*) value {
  resultConversation.hasName = YES;
  resultConversation.name = value;
  return self;
}
- (ConversationBuilder*) clearName {
  resultConversation.hasName = NO;
  resultConversation.name = @"";
  return self;
}
@end

@interface ConversationListRequest ()
@property (strong) NSString* accessToken;
@property SInt32 type;
@end

@implementation ConversationListRequest

- (BOOL) hasAccessToken {
  return !!hasAccessToken_;
}
- (void) setHasAccessToken:(BOOL) _value_ {
  hasAccessToken_ = !!_value_;
}
@synthesize accessToken;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (instancetype) init {
  if ((self = [super init])) {
    self.accessToken = @"";
    self.type = 0;
  }
  return self;
}
static ConversationListRequest* defaultConversationListRequestInstance = nil;
+ (void) initialize {
  if (self == [ConversationListRequest class]) {
    defaultConversationListRequestInstance = [[ConversationListRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultConversationListRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultConversationListRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasAccessToken) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccessToken) {
    [output writeString:1 value:self.accessToken];
  }
  if (self.hasType) {
    [output writeInt32:2 value:self.type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccessToken) {
    size_ += computeStringSize(1, self.accessToken);
  }
  if (self.hasType) {
    size_ += computeInt32Size(2, self.type);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ConversationListRequest*) parseFromData:(NSData*) data {
  return (ConversationListRequest*)[[[ConversationListRequest builder] mergeFromData:data] build];
}
+ (ConversationListRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ConversationListRequest*)[[[ConversationListRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ConversationListRequest*) parseFromInputStream:(NSInputStream*) input {
  return (ConversationListRequest*)[[[ConversationListRequest builder] mergeFromInputStream:input] build];
}
+ (ConversationListRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ConversationListRequest*)[[[ConversationListRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ConversationListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ConversationListRequest*)[[[ConversationListRequest builder] mergeFromCodedInputStream:input] build];
}
+ (ConversationListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ConversationListRequest*)[[[ConversationListRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ConversationListRequestBuilder*) builder {
  return [[ConversationListRequestBuilder alloc] init];
}
+ (ConversationListRequestBuilder*) builderWithPrototype:(ConversationListRequest*) prototype {
  return [[ConversationListRequest builder] mergeFrom:prototype];
}
- (ConversationListRequestBuilder*) builder {
  return [ConversationListRequest builder];
}
- (ConversationListRequestBuilder*) toBuilder {
  return [ConversationListRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccessToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accessToken", self.accessToken];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasAccessToken) {
    [dictionary setObject: self.accessToken forKey: @"accessToken"];
  }
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ConversationListRequest class]]) {
    return NO;
  }
  ConversationListRequest *otherMessage = other;
  return
      self.hasAccessToken == otherMessage.hasAccessToken &&
      (!self.hasAccessToken || [self.accessToken isEqual:otherMessage.accessToken]) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAccessToken) {
    hashCode = hashCode * 31 + [self.accessToken hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL ConversationListRequestFilterTypeIsValidValue(ConversationListRequestFilterType value) {
  switch (value) {
    case ConversationListRequestFilterTypeDefault:
    case ConversationListRequestFilterTypeAll:
    case ConversationListRequestFilterTypeNearBy:
    case ConversationListRequestFilterTypeFriends:
    case ConversationListRequestFilterTypeHot:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromConversationListRequestFilterType(ConversationListRequestFilterType value) {
  switch (value) {
    case ConversationListRequestFilterTypeDefault:
      return @"ConversationListRequestFilterTypeDefault";
    case ConversationListRequestFilterTypeAll:
      return @"ConversationListRequestFilterTypeAll";
    case ConversationListRequestFilterTypeNearBy:
      return @"ConversationListRequestFilterTypeNearBy";
    case ConversationListRequestFilterTypeFriends:
      return @"ConversationListRequestFilterTypeFriends";
    case ConversationListRequestFilterTypeHot:
      return @"ConversationListRequestFilterTypeHot";
    default:
      return nil;
  }
}

@interface ConversationListRequestBuilder()
@property (strong) ConversationListRequest* resultConversationListRequest;
@end

@implementation ConversationListRequestBuilder
@synthesize resultConversationListRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultConversationListRequest = [[ConversationListRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultConversationListRequest;
}
- (ConversationListRequestBuilder*) clear {
  self.resultConversationListRequest = [[ConversationListRequest alloc] init];
  return self;
}
- (ConversationListRequestBuilder*) clone {
  return [ConversationListRequest builderWithPrototype:resultConversationListRequest];
}
- (ConversationListRequest*) defaultInstance {
  return [ConversationListRequest defaultInstance];
}
- (ConversationListRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ConversationListRequest*) buildPartial {
  ConversationListRequest* returnMe = resultConversationListRequest;
  self.resultConversationListRequest = nil;
  return returnMe;
}
- (ConversationListRequestBuilder*) mergeFrom:(ConversationListRequest*) other {
  if (other == [ConversationListRequest defaultInstance]) {
    return self;
  }
  if (other.hasAccessToken) {
    [self setAccessToken:other.accessToken];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ConversationListRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ConversationListRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setAccessToken:[input readString]];
        break;
      }
      case 16: {
        [self setType:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAccessToken {
  return resultConversationListRequest.hasAccessToken;
}
- (NSString*) accessToken {
  return resultConversationListRequest.accessToken;
}
- (ConversationListRequestBuilder*) setAccessToken:(NSString*) value {
  resultConversationListRequest.hasAccessToken = YES;
  resultConversationListRequest.accessToken = value;
  return self;
}
- (ConversationListRequestBuilder*) clearAccessToken {
  resultConversationListRequest.hasAccessToken = NO;
  resultConversationListRequest.accessToken = @"";
  return self;
}
- (BOOL) hasType {
  return resultConversationListRequest.hasType;
}
- (SInt32) type {
  return resultConversationListRequest.type;
}
- (ConversationListRequestBuilder*) setType:(SInt32) value {
  resultConversationListRequest.hasType = YES;
  resultConversationListRequest.type = value;
  return self;
}
- (ConversationListRequestBuilder*) clearType {
  resultConversationListRequest.hasType = NO;
  resultConversationListRequest.type = 0;
  return self;
}
@end

@interface ConversationListResponse ()
@property (strong) NSMutableArray<Conversation*> * listArray;
@end

@implementation ConversationListResponse

@synthesize listArray;
@dynamic list;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static ConversationListResponse* defaultConversationListResponseInstance = nil;
+ (void) initialize {
  if (self == [ConversationListResponse class]) {
    defaultConversationListResponseInstance = [[ConversationListResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultConversationListResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultConversationListResponseInstance;
}
- (NSArray<Conversation*> *)list {
  return listArray;
}
- (Conversation*)listAtIndex:(NSUInteger)index {
  return [listArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitlist = YES;
   [self.list enumerateObjectsUsingBlock:^(Conversation *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitlist = NO;
      *stop = YES;
    }
  }];
  if (!isInitlist) return isInitlist;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.listArray enumerateObjectsUsingBlock:^(Conversation *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.listArray enumerateObjectsUsingBlock:^(Conversation *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ConversationListResponse*) parseFromData:(NSData*) data {
  return (ConversationListResponse*)[[[ConversationListResponse builder] mergeFromData:data] build];
}
+ (ConversationListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ConversationListResponse*)[[[ConversationListResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ConversationListResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ConversationListResponse*)[[[ConversationListResponse builder] mergeFromInputStream:input] build];
}
+ (ConversationListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ConversationListResponse*)[[[ConversationListResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ConversationListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ConversationListResponse*)[[[ConversationListResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ConversationListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ConversationListResponse*)[[[ConversationListResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ConversationListResponseBuilder*) builder {
  return [[ConversationListResponseBuilder alloc] init];
}
+ (ConversationListResponseBuilder*) builderWithPrototype:(ConversationListResponse*) prototype {
  return [[ConversationListResponse builder] mergeFrom:prototype];
}
- (ConversationListResponseBuilder*) builder {
  return [ConversationListResponse builder];
}
- (ConversationListResponseBuilder*) toBuilder {
  return [ConversationListResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.listArray enumerateObjectsUsingBlock:^(Conversation *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"list"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (Conversation* element in self.listArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"list"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ConversationListResponse class]]) {
    return NO;
  }
  ConversationListResponse *otherMessage = other;
  return
      [self.listArray isEqualToArray:otherMessage.listArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.listArray enumerateObjectsUsingBlock:^(Conversation *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ConversationListResponseBuilder()
@property (strong) ConversationListResponse* resultConversationListResponse;
@end

@implementation ConversationListResponseBuilder
@synthesize resultConversationListResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultConversationListResponse = [[ConversationListResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultConversationListResponse;
}
- (ConversationListResponseBuilder*) clear {
  self.resultConversationListResponse = [[ConversationListResponse alloc] init];
  return self;
}
- (ConversationListResponseBuilder*) clone {
  return [ConversationListResponse builderWithPrototype:resultConversationListResponse];
}
- (ConversationListResponse*) defaultInstance {
  return [ConversationListResponse defaultInstance];
}
- (ConversationListResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ConversationListResponse*) buildPartial {
  ConversationListResponse* returnMe = resultConversationListResponse;
  self.resultConversationListResponse = nil;
  return returnMe;
}
- (ConversationListResponseBuilder*) mergeFrom:(ConversationListResponse*) other {
  if (other == [ConversationListResponse defaultInstance]) {
    return self;
  }
  if (other.listArray.count > 0) {
    if (resultConversationListResponse.listArray == nil) {
      resultConversationListResponse.listArray = [[NSMutableArray alloc] initWithArray:other.listArray];
    } else {
      [resultConversationListResponse.listArray addObjectsFromArray:other.listArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ConversationListResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ConversationListResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        ConversationBuilder* subBuilder = [Conversation builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray<Conversation*> *)list {
  return resultConversationListResponse.listArray;
}
- (Conversation*)listAtIndex:(NSUInteger)index {
  return [resultConversationListResponse listAtIndex:index];
}
- (ConversationListResponseBuilder *)addList:(Conversation*)value {
  if (resultConversationListResponse.listArray == nil) {
    resultConversationListResponse.listArray = [[NSMutableArray alloc]init];
  }
  [resultConversationListResponse.listArray addObject:value];
  return self;
}
- (ConversationListResponseBuilder *)setListArray:(NSArray<Conversation*> *)array {
  resultConversationListResponse.listArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (ConversationListResponseBuilder *)clearList {
  resultConversationListResponse.listArray = nil;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
