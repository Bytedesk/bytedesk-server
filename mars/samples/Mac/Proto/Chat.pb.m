// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Chat.pb.h"
// @@protoc_insertion_point(imports)

@implementation ChatRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ChatRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface SendMessageRequest ()
@property (strong) NSString* accessToken;
@property (strong) NSString* pb_from;
@property (strong) NSString* to;
@property (strong) NSString* text;
@property (strong) NSString* topic;
@end

@implementation SendMessageRequest

- (BOOL) hasAccessToken {
  return !!hasAccessToken_;
}
- (void) setHasAccessToken:(BOOL) _value_ {
  hasAccessToken_ = !!_value_;
}
@synthesize accessToken;
- (BOOL) hasFrom {
  return !!hasFrom_;
}
- (void) setHasFrom:(BOOL) _value_ {
  hasFrom_ = !!_value_;
}
@synthesize pb_from;
- (BOOL) hasTo {
  return !!hasTo_;
}
- (void) setHasTo:(BOOL) _value_ {
  hasTo_ = !!_value_;
}
@synthesize to;
- (BOOL) hasText {
  return !!hasText_;
}
- (void) setHasText:(BOOL) _value_ {
  hasText_ = !!_value_;
}
@synthesize text;
- (BOOL) hasTopic {
  return !!hasTopic_;
}
- (void) setHasTopic:(BOOL) _value_ {
  hasTopic_ = !!_value_;
}
@synthesize topic;
- (instancetype) init {
  if ((self = [super init])) {
    self.accessToken = @"";
    self.pb_from = @"";
    self.to = @"";
    self.text = @"";
    self.topic = @"";
  }
  return self;
}
static SendMessageRequest* defaultSendMessageRequestInstance = nil;
+ (void) initialize {
  if (self == [SendMessageRequest class]) {
    defaultSendMessageRequestInstance = [[SendMessageRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSendMessageRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultSendMessageRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasAccessToken) {
    return NO;
  }
  if (!self.hasFrom) {
    return NO;
  }
  if (!self.hasTo) {
    return NO;
  }
  if (!self.hasText) {
    return NO;
  }
  if (!self.hasTopic) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAccessToken) {
    [output writeString:1 value:self.accessToken];
  }
  if (self.hasFrom) {
    [output writeString:2 value:self.pb_from];
  }
  if (self.hasTo) {
    [output writeString:3 value:self.to];
  }
  if (self.hasText) {
    [output writeString:4 value:self.text];
  }
  if (self.hasTopic) {
    [output writeString:5 value:self.topic];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAccessToken) {
    size_ += computeStringSize(1, self.accessToken);
  }
  if (self.hasFrom) {
    size_ += computeStringSize(2, self.pb_from);
  }
  if (self.hasTo) {
    size_ += computeStringSize(3, self.to);
  }
  if (self.hasText) {
    size_ += computeStringSize(4, self.text);
  }
  if (self.hasTopic) {
    size_ += computeStringSize(5, self.topic);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SendMessageRequest*) parseFromData:(NSData*) data {
  return (SendMessageRequest*)[[[SendMessageRequest builder] mergeFromData:data] build];
}
+ (SendMessageRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendMessageRequest*)[[[SendMessageRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SendMessageRequest*) parseFromInputStream:(NSInputStream*) input {
  return (SendMessageRequest*)[[[SendMessageRequest builder] mergeFromInputStream:input] build];
}
+ (SendMessageRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendMessageRequest*)[[[SendMessageRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendMessageRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SendMessageRequest*)[[[SendMessageRequest builder] mergeFromCodedInputStream:input] build];
}
+ (SendMessageRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendMessageRequest*)[[[SendMessageRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendMessageRequestBuilder*) builder {
  return [[SendMessageRequestBuilder alloc] init];
}
+ (SendMessageRequestBuilder*) builderWithPrototype:(SendMessageRequest*) prototype {
  return [[SendMessageRequest builder] mergeFrom:prototype];
}
- (SendMessageRequestBuilder*) builder {
  return [SendMessageRequest builder];
}
- (SendMessageRequestBuilder*) toBuilder {
  return [SendMessageRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAccessToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"accessToken", self.accessToken];
  }
  if (self.hasFrom) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pb_from", self.pb_from];
  }
  if (self.hasTo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"to", self.to];
  }
  if (self.hasText) {
    [output appendFormat:@"%@%@: %@\n", indent, @"text", self.text];
  }
  if (self.hasTopic) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topic", self.topic];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasAccessToken) {
    [dictionary setObject: self.accessToken forKey: @"accessToken"];
  }
  if (self.hasFrom) {
    [dictionary setObject: self.pb_from forKey: @"pb_from"];
  }
  if (self.hasTo) {
    [dictionary setObject: self.to forKey: @"to"];
  }
  if (self.hasText) {
    [dictionary setObject: self.text forKey: @"text"];
  }
  if (self.hasTopic) {
    [dictionary setObject: self.topic forKey: @"topic"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SendMessageRequest class]]) {
    return NO;
  }
  SendMessageRequest *otherMessage = other;
  return
      self.hasAccessToken == otherMessage.hasAccessToken &&
      (!self.hasAccessToken || [self.accessToken isEqual:otherMessage.accessToken]) &&
      self.hasFrom == otherMessage.hasFrom &&
      (!self.hasFrom || [self.pb_from isEqual:otherMessage.pb_from]) &&
      self.hasTo == otherMessage.hasTo &&
      (!self.hasTo || [self.to isEqual:otherMessage.to]) &&
      self.hasText == otherMessage.hasText &&
      (!self.hasText || [self.text isEqual:otherMessage.text]) &&
      self.hasTopic == otherMessage.hasTopic &&
      (!self.hasTopic || [self.topic isEqual:otherMessage.topic]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAccessToken) {
    hashCode = hashCode * 31 + [self.accessToken hash];
  }
  if (self.hasFrom) {
    hashCode = hashCode * 31 + [self.pb_from hash];
  }
  if (self.hasTo) {
    hashCode = hashCode * 31 + [self.to hash];
  }
  if (self.hasText) {
    hashCode = hashCode * 31 + [self.text hash];
  }
  if (self.hasTopic) {
    hashCode = hashCode * 31 + [self.topic hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SendMessageRequestBuilder()
@property (strong) SendMessageRequest* resultSendMessageRequest;
@end

@implementation SendMessageRequestBuilder
@synthesize resultSendMessageRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSendMessageRequest = [[SendMessageRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSendMessageRequest;
}
- (SendMessageRequestBuilder*) clear {
  self.resultSendMessageRequest = [[SendMessageRequest alloc] init];
  return self;
}
- (SendMessageRequestBuilder*) clone {
  return [SendMessageRequest builderWithPrototype:resultSendMessageRequest];
}
- (SendMessageRequest*) defaultInstance {
  return [SendMessageRequest defaultInstance];
}
- (SendMessageRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SendMessageRequest*) buildPartial {
  SendMessageRequest* returnMe = resultSendMessageRequest;
  self.resultSendMessageRequest = nil;
  return returnMe;
}
- (SendMessageRequestBuilder*) mergeFrom:(SendMessageRequest*) other {
  if (other == [SendMessageRequest defaultInstance]) {
    return self;
  }
  if (other.hasAccessToken) {
    [self setAccessToken:other.accessToken];
  }
  if (other.hasFrom) {
    [self setFrom:other.pb_from];
  }
  if (other.hasTo) {
    [self setTo:other.to];
  }
  if (other.hasText) {
    [self setText:other.text];
  }
  if (other.hasTopic) {
    [self setTopic:other.topic];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SendMessageRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SendMessageRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setAccessToken:[input readString]];
        break;
      }
      case 18: {
        [self setFrom:[input readString]];
        break;
      }
      case 26: {
        [self setTo:[input readString]];
        break;
      }
      case 34: {
        [self setText:[input readString]];
        break;
      }
      case 42: {
        [self setTopic:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasAccessToken {
  return resultSendMessageRequest.hasAccessToken;
}
- (NSString*) accessToken {
  return resultSendMessageRequest.accessToken;
}
- (SendMessageRequestBuilder*) setAccessToken:(NSString*) value {
  resultSendMessageRequest.hasAccessToken = YES;
  resultSendMessageRequest.accessToken = value;
  return self;
}
- (SendMessageRequestBuilder*) clearAccessToken {
  resultSendMessageRequest.hasAccessToken = NO;
  resultSendMessageRequest.accessToken = @"";
  return self;
}
- (BOOL) hasFrom {
  return resultSendMessageRequest.hasFrom;
}
- (NSString*) pb_from {
  return resultSendMessageRequest.pb_from;
}
- (SendMessageRequestBuilder*) setFrom:(NSString*) value {
  resultSendMessageRequest.hasFrom = YES;
  resultSendMessageRequest.pb_from = value;
  return self;
}
- (SendMessageRequestBuilder*) clearFrom {
  resultSendMessageRequest.hasFrom = NO;
  resultSendMessageRequest.pb_from = @"";
  return self;
}
- (BOOL) hasTo {
  return resultSendMessageRequest.hasTo;
}
- (NSString*) to {
  return resultSendMessageRequest.to;
}
- (SendMessageRequestBuilder*) setTo:(NSString*) value {
  resultSendMessageRequest.hasTo = YES;
  resultSendMessageRequest.to = value;
  return self;
}
- (SendMessageRequestBuilder*) clearTo {
  resultSendMessageRequest.hasTo = NO;
  resultSendMessageRequest.to = @"";
  return self;
}
- (BOOL) hasText {
  return resultSendMessageRequest.hasText;
}
- (NSString*) text {
  return resultSendMessageRequest.text;
}
- (SendMessageRequestBuilder*) setText:(NSString*) value {
  resultSendMessageRequest.hasText = YES;
  resultSendMessageRequest.text = value;
  return self;
}
- (SendMessageRequestBuilder*) clearText {
  resultSendMessageRequest.hasText = NO;
  resultSendMessageRequest.text = @"";
  return self;
}
- (BOOL) hasTopic {
  return resultSendMessageRequest.hasTopic;
}
- (NSString*) topic {
  return resultSendMessageRequest.topic;
}
- (SendMessageRequestBuilder*) setTopic:(NSString*) value {
  resultSendMessageRequest.hasTopic = YES;
  resultSendMessageRequest.topic = value;
  return self;
}
- (SendMessageRequestBuilder*) clearTopic {
  resultSendMessageRequest.hasTopic = NO;
  resultSendMessageRequest.topic = @"";
  return self;
}
@end

@interface SendMessageResponse ()
@property SInt32 errCode;
@property (strong) NSString* errMsg;
@property (strong) NSString* pb_from;
@property (strong) NSString* text;
@property (strong) NSString* topic;
@end

@implementation SendMessageResponse

- (BOOL) hasErrCode {
  return !!hasErrCode_;
}
- (void) setHasErrCode:(BOOL) _value_ {
  hasErrCode_ = !!_value_;
}
@synthesize errCode;
- (BOOL) hasErrMsg {
  return !!hasErrMsg_;
}
- (void) setHasErrMsg:(BOOL) _value_ {
  hasErrMsg_ = !!_value_;
}
@synthesize errMsg;
- (BOOL) hasFrom {
  return !!hasFrom_;
}
- (void) setHasFrom:(BOOL) _value_ {
  hasFrom_ = !!_value_;
}
@synthesize pb_from;
- (BOOL) hasText {
  return !!hasText_;
}
- (void) setHasText:(BOOL) _value_ {
  hasText_ = !!_value_;
}
@synthesize text;
- (BOOL) hasTopic {
  return !!hasTopic_;
}
- (void) setHasTopic:(BOOL) _value_ {
  hasTopic_ = !!_value_;
}
@synthesize topic;
- (instancetype) init {
  if ((self = [super init])) {
    self.errCode = 0;
    self.errMsg = @"";
    self.pb_from = @"";
    self.text = @"";
    self.topic = @"";
  }
  return self;
}
static SendMessageResponse* defaultSendMessageResponseInstance = nil;
+ (void) initialize {
  if (self == [SendMessageResponse class]) {
    defaultSendMessageResponseInstance = [[SendMessageResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSendMessageResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultSendMessageResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasErrCode) {
    return NO;
  }
  if (!self.hasErrMsg) {
    return NO;
  }
  if (!self.hasFrom) {
    return NO;
  }
  if (!self.hasText) {
    return NO;
  }
  if (!self.hasTopic) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasErrCode) {
    [output writeInt32:1 value:self.errCode];
  }
  if (self.hasErrMsg) {
    [output writeString:2 value:self.errMsg];
  }
  if (self.hasFrom) {
    [output writeString:3 value:self.pb_from];
  }
  if (self.hasText) {
    [output writeString:4 value:self.text];
  }
  if (self.hasTopic) {
    [output writeString:5 value:self.topic];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasErrCode) {
    size_ += computeInt32Size(1, self.errCode);
  }
  if (self.hasErrMsg) {
    size_ += computeStringSize(2, self.errMsg);
  }
  if (self.hasFrom) {
    size_ += computeStringSize(3, self.pb_from);
  }
  if (self.hasText) {
    size_ += computeStringSize(4, self.text);
  }
  if (self.hasTopic) {
    size_ += computeStringSize(5, self.topic);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SendMessageResponse*) parseFromData:(NSData*) data {
  return (SendMessageResponse*)[[[SendMessageResponse builder] mergeFromData:data] build];
}
+ (SendMessageResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendMessageResponse*)[[[SendMessageResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SendMessageResponse*) parseFromInputStream:(NSInputStream*) input {
  return (SendMessageResponse*)[[[SendMessageResponse builder] mergeFromInputStream:input] build];
}
+ (SendMessageResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendMessageResponse*)[[[SendMessageResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendMessageResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SendMessageResponse*)[[[SendMessageResponse builder] mergeFromCodedInputStream:input] build];
}
+ (SendMessageResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SendMessageResponse*)[[[SendMessageResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SendMessageResponseBuilder*) builder {
  return [[SendMessageResponseBuilder alloc] init];
}
+ (SendMessageResponseBuilder*) builderWithPrototype:(SendMessageResponse*) prototype {
  return [[SendMessageResponse builder] mergeFrom:prototype];
}
- (SendMessageResponseBuilder*) builder {
  return [SendMessageResponse builder];
}
- (SendMessageResponseBuilder*) toBuilder {
  return [SendMessageResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasErrCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errCode", [NSNumber numberWithInteger:self.errCode]];
  }
  if (self.hasErrMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errMsg", self.errMsg];
  }
  if (self.hasFrom) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pb_from", self.pb_from];
  }
  if (self.hasText) {
    [output appendFormat:@"%@%@: %@\n", indent, @"text", self.text];
  }
  if (self.hasTopic) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topic", self.topic];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasErrCode) {
    [dictionary setObject: [NSNumber numberWithInteger:self.errCode] forKey: @"errCode"];
  }
  if (self.hasErrMsg) {
    [dictionary setObject: self.errMsg forKey: @"errMsg"];
  }
  if (self.hasFrom) {
    [dictionary setObject: self.pb_from forKey: @"pb_from"];
  }
  if (self.hasText) {
    [dictionary setObject: self.text forKey: @"text"];
  }
  if (self.hasTopic) {
    [dictionary setObject: self.topic forKey: @"topic"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SendMessageResponse class]]) {
    return NO;
  }
  SendMessageResponse *otherMessage = other;
  return
      self.hasErrCode == otherMessage.hasErrCode &&
      (!self.hasErrCode || self.errCode == otherMessage.errCode) &&
      self.hasErrMsg == otherMessage.hasErrMsg &&
      (!self.hasErrMsg || [self.errMsg isEqual:otherMessage.errMsg]) &&
      self.hasFrom == otherMessage.hasFrom &&
      (!self.hasFrom || [self.pb_from isEqual:otherMessage.pb_from]) &&
      self.hasText == otherMessage.hasText &&
      (!self.hasText || [self.text isEqual:otherMessage.text]) &&
      self.hasTopic == otherMessage.hasTopic &&
      (!self.hasTopic || [self.topic isEqual:otherMessage.topic]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasErrCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.errCode] hash];
  }
  if (self.hasErrMsg) {
    hashCode = hashCode * 31 + [self.errMsg hash];
  }
  if (self.hasFrom) {
    hashCode = hashCode * 31 + [self.pb_from hash];
  }
  if (self.hasText) {
    hashCode = hashCode * 31 + [self.text hash];
  }
  if (self.hasTopic) {
    hashCode = hashCode * 31 + [self.topic hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL SendMessageResponseErrorIsValidValue(SendMessageResponseError value) {
  switch (value) {
    case SendMessageResponseErrorErrOk:
    case SendMessageResponseErrorErrSys:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromSendMessageResponseError(SendMessageResponseError value) {
  switch (value) {
    case SendMessageResponseErrorErrOk:
      return @"SendMessageResponseErrorErrOk";
    case SendMessageResponseErrorErrSys:
      return @"SendMessageResponseErrorErrSys";
    default:
      return nil;
  }
}

@interface SendMessageResponseBuilder()
@property (strong) SendMessageResponse* resultSendMessageResponse;
@end

@implementation SendMessageResponseBuilder
@synthesize resultSendMessageResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSendMessageResponse = [[SendMessageResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSendMessageResponse;
}
- (SendMessageResponseBuilder*) clear {
  self.resultSendMessageResponse = [[SendMessageResponse alloc] init];
  return self;
}
- (SendMessageResponseBuilder*) clone {
  return [SendMessageResponse builderWithPrototype:resultSendMessageResponse];
}
- (SendMessageResponse*) defaultInstance {
  return [SendMessageResponse defaultInstance];
}
- (SendMessageResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SendMessageResponse*) buildPartial {
  SendMessageResponse* returnMe = resultSendMessageResponse;
  self.resultSendMessageResponse = nil;
  return returnMe;
}
- (SendMessageResponseBuilder*) mergeFrom:(SendMessageResponse*) other {
  if (other == [SendMessageResponse defaultInstance]) {
    return self;
  }
  if (other.hasErrCode) {
    [self setErrCode:other.errCode];
  }
  if (other.hasErrMsg) {
    [self setErrMsg:other.errMsg];
  }
  if (other.hasFrom) {
    [self setFrom:other.pb_from];
  }
  if (other.hasText) {
    [self setText:other.text];
  }
  if (other.hasTopic) {
    [self setTopic:other.topic];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SendMessageResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SendMessageResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setErrCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setErrMsg:[input readString]];
        break;
      }
      case 26: {
        [self setFrom:[input readString]];
        break;
      }
      case 34: {
        [self setText:[input readString]];
        break;
      }
      case 42: {
        [self setTopic:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasErrCode {
  return resultSendMessageResponse.hasErrCode;
}
- (SInt32) errCode {
  return resultSendMessageResponse.errCode;
}
- (SendMessageResponseBuilder*) setErrCode:(SInt32) value {
  resultSendMessageResponse.hasErrCode = YES;
  resultSendMessageResponse.errCode = value;
  return self;
}
- (SendMessageResponseBuilder*) clearErrCode {
  resultSendMessageResponse.hasErrCode = NO;
  resultSendMessageResponse.errCode = 0;
  return self;
}
- (BOOL) hasErrMsg {
  return resultSendMessageResponse.hasErrMsg;
}
- (NSString*) errMsg {
  return resultSendMessageResponse.errMsg;
}
- (SendMessageResponseBuilder*) setErrMsg:(NSString*) value {
  resultSendMessageResponse.hasErrMsg = YES;
  resultSendMessageResponse.errMsg = value;
  return self;
}
- (SendMessageResponseBuilder*) clearErrMsg {
  resultSendMessageResponse.hasErrMsg = NO;
  resultSendMessageResponse.errMsg = @"";
  return self;
}
- (BOOL) hasFrom {
  return resultSendMessageResponse.hasFrom;
}
- (NSString*) pb_from {
  return resultSendMessageResponse.pb_from;
}
- (SendMessageResponseBuilder*) setFrom:(NSString*) value {
  resultSendMessageResponse.hasFrom = YES;
  resultSendMessageResponse.pb_from = value;
  return self;
}
- (SendMessageResponseBuilder*) clearFrom {
  resultSendMessageResponse.hasFrom = NO;
  resultSendMessageResponse.pb_from = @"";
  return self;
}
- (BOOL) hasText {
  return resultSendMessageResponse.hasText;
}
- (NSString*) text {
  return resultSendMessageResponse.text;
}
- (SendMessageResponseBuilder*) setText:(NSString*) value {
  resultSendMessageResponse.hasText = YES;
  resultSendMessageResponse.text = value;
  return self;
}
- (SendMessageResponseBuilder*) clearText {
  resultSendMessageResponse.hasText = NO;
  resultSendMessageResponse.text = @"";
  return self;
}
- (BOOL) hasTopic {
  return resultSendMessageResponse.hasTopic;
}
- (NSString*) topic {
  return resultSendMessageResponse.topic;
}
- (SendMessageResponseBuilder*) setTopic:(NSString*) value {
  resultSendMessageResponse.hasTopic = YES;
  resultSendMessageResponse.topic = value;
  return self;
}
- (SendMessageResponseBuilder*) clearTopic {
  resultSendMessageResponse.hasTopic = NO;
  resultSendMessageResponse.topic = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
