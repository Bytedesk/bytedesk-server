// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Messagepush.pb.h"
// @@protoc_insertion_point(imports)

@implementation MessagepushRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [MessagepushRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface MessagePush ()
@property (strong) NSString* topic;
@property (strong) NSString* content;
@property (strong) NSString* pb_from;
@end

@implementation MessagePush

- (BOOL) hasTopic {
  return !!hasTopic_;
}
- (void) setHasTopic:(BOOL) _value_ {
  hasTopic_ = !!_value_;
}
@synthesize topic;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasFrom {
  return !!hasFrom_;
}
- (void) setHasFrom:(BOOL) _value_ {
  hasFrom_ = !!_value_;
}
@synthesize pb_from;
- (instancetype) init {
  if ((self = [super init])) {
    self.topic = @"";
    self.content = @"";
    self.pb_from = @"";
  }
  return self;
}
static MessagePush* defaultMessagePushInstance = nil;
+ (void) initialize {
  if (self == [MessagePush class]) {
    defaultMessagePushInstance = [[MessagePush alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMessagePushInstance;
}
- (instancetype) defaultInstance {
  return defaultMessagePushInstance;
}
- (BOOL) isInitialized {
  if (!self.hasTopic) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  if (!self.hasFrom) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTopic) {
    [output writeString:1 value:self.topic];
  }
  if (self.hasContent) {
    [output writeString:2 value:self.content];
  }
  if (self.hasFrom) {
    [output writeString:3 value:self.pb_from];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTopic) {
    size_ += computeStringSize(1, self.topic);
  }
  if (self.hasContent) {
    size_ += computeStringSize(2, self.content);
  }
  if (self.hasFrom) {
    size_ += computeStringSize(3, self.pb_from);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (MessagePush*) parseFromData:(NSData*) data {
  return (MessagePush*)[[[MessagePush builder] mergeFromData:data] build];
}
+ (MessagePush*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessagePush*)[[[MessagePush builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (MessagePush*) parseFromInputStream:(NSInputStream*) input {
  return (MessagePush*)[[[MessagePush builder] mergeFromInputStream:input] build];
}
+ (MessagePush*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessagePush*)[[[MessagePush builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessagePush*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (MessagePush*)[[[MessagePush builder] mergeFromCodedInputStream:input] build];
}
+ (MessagePush*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (MessagePush*)[[[MessagePush builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessagePushBuilder*) builder {
  return [[MessagePushBuilder alloc] init];
}
+ (MessagePushBuilder*) builderWithPrototype:(MessagePush*) prototype {
  return [[MessagePush builder] mergeFrom:prototype];
}
- (MessagePushBuilder*) builder {
  return [MessagePush builder];
}
- (MessagePushBuilder*) toBuilder {
  return [MessagePush builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTopic) {
    [output appendFormat:@"%@%@: %@\n", indent, @"topic", self.topic];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasFrom) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pb_from", self.pb_from];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTopic) {
    [dictionary setObject: self.topic forKey: @"topic"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasFrom) {
    [dictionary setObject: self.pb_from forKey: @"pb_from"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[MessagePush class]]) {
    return NO;
  }
  MessagePush *otherMessage = other;
  return
      self.hasTopic == otherMessage.hasTopic &&
      (!self.hasTopic || [self.topic isEqual:otherMessage.topic]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasFrom == otherMessage.hasFrom &&
      (!self.hasFrom || [self.pb_from isEqual:otherMessage.pb_from]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTopic) {
    hashCode = hashCode * 31 + [self.topic hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasFrom) {
    hashCode = hashCode * 31 + [self.pb_from hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MessagePushBuilder()
@property (strong) MessagePush* resultMessagePush;
@end

@implementation MessagePushBuilder
@synthesize resultMessagePush;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultMessagePush = [[MessagePush alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultMessagePush;
}
- (MessagePushBuilder*) clear {
  self.resultMessagePush = [[MessagePush alloc] init];
  return self;
}
- (MessagePushBuilder*) clone {
  return [MessagePush builderWithPrototype:resultMessagePush];
}
- (MessagePush*) defaultInstance {
  return [MessagePush defaultInstance];
}
- (MessagePush*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (MessagePush*) buildPartial {
  MessagePush* returnMe = resultMessagePush;
  self.resultMessagePush = nil;
  return returnMe;
}
- (MessagePushBuilder*) mergeFrom:(MessagePush*) other {
  if (other == [MessagePush defaultInstance]) {
    return self;
  }
  if (other.hasTopic) {
    [self setTopic:other.topic];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasFrom) {
    [self setFrom:other.pb_from];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessagePushBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessagePushBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setTopic:[input readString]];
        break;
      }
      case 18: {
        [self setContent:[input readString]];
        break;
      }
      case 26: {
        [self setFrom:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasTopic {
  return resultMessagePush.hasTopic;
}
- (NSString*) topic {
  return resultMessagePush.topic;
}
- (MessagePushBuilder*) setTopic:(NSString*) value {
  resultMessagePush.hasTopic = YES;
  resultMessagePush.topic = value;
  return self;
}
- (MessagePushBuilder*) clearTopic {
  resultMessagePush.hasTopic = NO;
  resultMessagePush.topic = @"";
  return self;
}
- (BOOL) hasContent {
  return resultMessagePush.hasContent;
}
- (NSString*) content {
  return resultMessagePush.content;
}
- (MessagePushBuilder*) setContent:(NSString*) value {
  resultMessagePush.hasContent = YES;
  resultMessagePush.content = value;
  return self;
}
- (MessagePushBuilder*) clearContent {
  resultMessagePush.hasContent = NO;
  resultMessagePush.content = @"";
  return self;
}
- (BOOL) hasFrom {
  return resultMessagePush.hasFrom;
}
- (NSString*) pb_from {
  return resultMessagePush.pb_from;
}
- (MessagePushBuilder*) setFrom:(NSString*) value {
  resultMessagePush.hasFrom = YES;
  resultMessagePush.pb_from = value;
  return self;
}
- (MessagePushBuilder*) clearFrom {
  resultMessagePush.hasFrom = NO;
  resultMessagePush.pb_from = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
